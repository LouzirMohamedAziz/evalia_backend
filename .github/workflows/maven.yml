# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on: 
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
    

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Stop the previous running instance
      run: jps -ml | grep -i evalia.war | awk '{print $1}' | xargs -r kill
    - name: Build with Maven
      run: mvn -B package
    - name: Pre-deploy
      run: cp target/evalia-1.0-SNAPSHOT.war /opt/deployments/evalia/evalia.war
    - name: Run Evalia
      working-directory: /opt/deployments/evalia
      run: nohup java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000 -jar evalia.war --spring.profiles.active=test > /dev/null &
      env:
          PORT: ${{ vars.PORT }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          LOG_PATH: ${{ vars.LOG_PATH }}
          RUNNER_TRACKING_ID: 0
